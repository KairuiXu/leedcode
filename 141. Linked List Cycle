Given a linked list, determine if it has a cycle in it.
/**
 * Definition for singly-linked list.
 * class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) {
 *         val = x;
 *         next = null;
 *     }
 * }
 */
public class Solution {
    public boolean hasCycle(ListNode head) {
        if(head==null) return false;
        ListNode l1 = head;
        ListNode l2 = head.next;
        while(l2!=null){
            if(l1 == l2)
                return true;
            else {
                l1=l1.next;
                if(l2.next!= null)
                    l2=l2.next.next;
                else return false;
            }
        }
        return false;
    }
}
